name: 'Build'
description: 'Build MetGem and returns produced asset name and mimetype'
outputs:
  version:
    description: "Version of built program"
    value: ${{ steps.version.outputs.version }}
  tag:
    description: "Tag of built version"
    value: ${{ steps.version.outputs.tag }}
  hash:
    description: "Git hash of built version"
    value: ${{ steps.version.outputs.hash }}
  asset-name: 
    description: "Name of produced asset"
    value: ${{ steps.build.outputs.asset-name }}
  asset-mimetype:
    description: "MimeType of produced asset"
    value: ${{ steps.build.outputs.asset-mimetype }}
  asset-ext:
    description: "Extension of produced asset"
    value: ${{ steps.build.outputs.asset-ext }}
  asset-basename:
    description: "Name of produced asset without extension"
    value: ${{ steps.build.outputs.asset-basename }}
runs:
  using: "composite"
  steps:
    - name: Get version
      shell: bash -l {0}
      id: version
      run: |
        pushd metgem
        version=`python -c "import versioneer; print(versioneer.get_version()) |  cut -d "+" -f 1`
        hash=`git rev-parse --short HEAD`
        popd
        echo "version=${version}" >> $GITHUB_OUTPUT
        echo "tag=v${version}" >> $GITHUB_OUTPUT
        echo "hash=${hash}" >> $GITHUB_OUTPUT
    - name: Build
      shell: bash -l {0}
      id: build
      run: |
        python -m invoke build
        shopt -s extglob
        asset_name=`find . -maxdepth 1 \( -name "setup_MetGem*" -or -name "MetGem*.dmg" -or -name "MetGem*.AppImage" \) -print0 | xargs -0 ls -t | head -n 1 | xargs -n 1 basename`
        asset_basename=${asset_name%.*}
        asset_ext=${asset_name#*.}
        asset_mimetype=`file -b --mime-type $asset_name`
        asset_outputname="$asset_basename-${{ steps.version.outputs.hash }}.$asset_ext"
        
        mv $asset_name $asset_outputname
        
        echo "asset-name=$asset_outputname" >> $GITHUB_OUTPUT
        echo "asset-mimetype=$asset_mimetype" >> $GITHUB_OUTPUT
        echo "asset-ext=$asset_ext" >> $GITHUB_OUTPUT
        echo "asset-basename=$asset_basename" >> $GITHUB_OUTPUT
