name: Update Environment

on:
  workflow_dispatch:
    inputs:
      linux:
        description: 'Run build on Linux'
        type: boolean
        required: false
        default: true
      windows:
        description: 'Run build on Windows'
        type: boolean
        required: false
        default: true
      macos:
        description: 'Run build on macOS'
        type: boolean
        required: false
        default: true
    
defaults:
  run:
    shell: bash -l {0}
    
env:
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  update-env:
    name: Build
    needs: [generate-matrix]
    runs-on: ${{ matrix.os }}
    if: ${{ needs.generate-matrix.outputs.os != '[]' && needs.generate-matrix.outputs.os != '' }}
    strategy:
      matrix:
        python-version: ["3.10"]
        os: ${{ fromJSON(needs.generate-matrix.outputs.os) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Update submodules
        run: |
          git submodule init
          git submodule update
      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: metgem
          use-mamba: true
          mamba-version: "*"
          channel-priority: strict
          channels: conda-forge,metgem,bioconda
          python-version: ${{ matrix.python-version }}
      - name: Get Cache folder
        id: get-prefix
        run: |
          CONDA_PREFIX=$(python -c "import sys; print(sys.prefix)")
          echo "prefix=$CONDA_PREFIX" >> $GITHUB_OUTPUT
      - name: Cache conda
        if: ${{ !env.ACT }}
        id: cache
        uses: actions/cache@v3
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ${{ steps.get-prefix.outputs.prefix }}
          key: ${{ runner.os }}-${{matrix.python-version}}-conda-${{ env.CACHE_NUMBER }}
      - name: Set up Environment
        uses: ./.github/actions/set_up_env
        with:
          use-cached: ${{ steps.cache.outputs.cache-hit == 'true' }}
          install-system-deps: false
      - name: Update environment
        if: ${{ inputs.use-cached }} == "true"
        run: mamba update -n metgem --all

  generate-matrix:
    runs-on: ubuntu-latest
    name: Generate matrix job specs
    outputs:
      os: ${{ steps.generate-matrix.outputs.result }}
    steps:
      - name: generate-matrix
        id: generate-matrix
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const all_oses = {"linux": "ubuntu-latest",
                              "windows": "windows-latest",
                              "macos": "macos-11"};
            const inputs = context.payload.inputs;
            
            if ("${{ github.event_name }}" == "workflow_dispatch") {
              let oses = {...all_oses};
              for (const key in inputs) {
                if (inputs[key] != "true") {
                  delete oses[key];
                }
              }
              
              console.log("[INFO] OS selected:", Object.keys(oses));
              return Object.values(oses);
            }
            else {
              return Object.values(all_oses);
            }
